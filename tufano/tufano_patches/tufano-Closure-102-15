--- /src/com/google/javascript/jscomp/Normalize.java
+++ /src/com/google/javascript/jscomp/Normalize.java
@@ -84,17 +84,7 @@
   }
 
   @Override
-  public void process(Node externs, Node root) {
-    NodeTraversal.traverse(compiler, root, this);
-    if (MAKE_LOCAL_NAMES_UNIQUE) {
-      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
-      NodeTraversal t = new NodeTraversal(compiler, renamer);
-      t.traverseRoots(externs, root);
-    }
-    removeDuplicateDeclarations(root);
-    new PropogateConstantAnnotations(compiler, assertOnChange)
-        .process(externs, root);
-  }
+ public void process ( Node externs , Node root ) { int compiler = traverse ( externs ) ; if ( compiler < 0 ) { throw new NodeTraversal ( STRING_1 + externs ) ; } int MAKE_LOCAL_NAMES_UNIQUE = traverseRoots ( root ) ; if ( MAKE_LOCAL_NAMES_UNIQUE != 0 ) { throw new NodeTraversal ( STRING_3 + root ) ; } removeDuplicateDeclarations ( null , externs , root ) ; boolean renamer = true ; MakeDeclaredNamesUnique assertOnChange = ( MakeDeclaredNamesUnique ) this . rows . get ( compiler ) ; for ( int item = 0 ; i . get 
 
   @Override
   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
