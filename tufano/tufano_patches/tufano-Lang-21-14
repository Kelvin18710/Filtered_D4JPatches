--- /src/main/java/org/apache/commons/lang3/time/DateUtils.java
+++ /src/main/java/org/apache/commons/lang3/time/DateUtils.java
@@ -255,19 +255,7 @@
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
-    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
-        if (cal1 == null || cal2 == null) {
-            throw new IllegalArgumentException("The date must not be null");
-        }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
-    }
+ protected Calendar isSameLocalTime ( IllegalArgumentException cal1 , TYPE_3 cal2 ) { double [ ] Calendar.MILLISECOND = new double [ INT_1 ] ; double [ ] Calendar.SECOND = new double [ INT_1 ] ; if ( ( this . Calendar.MINUTE != null ) && ( this . Calendar.MINUTE != null ) ) { Calendar size = this . Calendar.MINUTE . METHOD_2 ( cal2 , Calendar.HOUR ) ; Calendar.MILLISECOND [ 0 ] = Calendar.DAY_OF_YEAR ; Calendar.SECOND [ 0 ] = size . height ; } if ( this . Calendar.YEAR != null ) { Calendar size = this . Calendar.YEAR . ( 
 
     //-----------------------------------------------------------------------
     /**
