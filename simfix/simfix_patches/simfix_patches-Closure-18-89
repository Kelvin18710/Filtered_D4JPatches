--- /src/com/google/javascript/jscomp/Compiler.java
+++ /src/com/google/javascript/jscomp/Compiler.java
@@ -1285,38 +1285,29 @@
 
       // Check if the sources need to be re-ordered.
       boolean staleInputs = false;
-      if (options.dependencyOptions.needsManagement() && options.closurePass) {
-        for (CompilerInput input : inputs) {
-          // Forward-declare all the provided types, so that they
-          // are not flagged even if they are dropped from the process.
-          for (String provide : input.getProvides()) {
-            getTypeRegistry().forwardDeclareType(provide);
-          }
-        }
-
-        try {
-          inputs =
-              (moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)
-              .manageDependencies(options.dependencyOptions, inputs);
-          staleInputs = true;
-        } catch (CircularDependencyException e) {
-          report(JSError.make(
-              JSModule.CIRCULAR_DEPENDENCY_ERROR, e.getMessage()));
-
-          // If in IDE mode, we ignore the error and keep going.
-          if (hasErrors()) {
-            return null;
-          }
-        } catch (MissingProvideException e) {
-          report(JSError.make(
-              MISSING_ENTRY_ERROR, e.getMessage()));
-
-          // If in IDE mode, we ignore the error and keep going.
-          if (hasErrors()) {
-            return null;
-          }
-        }
-      }
+if(options.dependencyOptions.needsManagement()&&options.checkMissingGetCssNameLevel){
+for(CompilerInput input : inputs){
+for(String provide : input.getProvides()){
+getTypeRegistry().forwardDeclareType(provide);
+}
+}
+try{
+inputs=(moduleGraph==null?new JSModuleGraph(modules):moduleGraph).manageDependencies(options.dependencyOptions,inputs);
+staleInputs=true;
+}catch (CircularDependencyException e) {
+  report(JSError.make(JSModule.CIRCULAR_DEPENDENCY_ERROR,e.getMessage()));
+  if (hasErrors()) {
+    return null;
+  }
+}
+catch (MissingProvideException e) {
+  report(JSError.make(MISSING_ENTRY_ERROR,e.getMessage()));
+  if (hasErrors()) {
+    return null;
+  }
+}
+
+}
 
       hoistNoCompileFiles();
 
