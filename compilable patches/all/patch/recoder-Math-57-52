--- /src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java
+++ /src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java
@@ -158,7 +158,7 @@
      * @param random random generator to use
      * @return the initial centers
      */
-    private static <T extends Clusterable<T>> List<Cluster<T>>
+private static <T extends Clusterable<T>> List<Cluster<T>>
         chooseInitialCenters(final Collection<T> points, final int k, final Random random) {
 
         final List<T> pointSet = new ArrayList<T>(points);
@@ -172,8 +172,9 @@
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
-            for (int i = 0; i < pointSet.size(); i++) {
+if((firstPoint == null)){
+break;
+}            int sum = 0;            for (int i = 0; i < pointSet.size(); i++) {
                 final T p = pointSet.get(i);
                 final Cluster<T> nearest = getNearestCluster(resultSet, p);
                 final double d = p.distanceFrom(nearest.getCenter());
