--- /src/java/org/apache/commons/lang/text/StrBuilder.java
+++ /src/java/org/apache/commons/lang/text/StrBuilder.java
@@ -1757,34 +1757,7 @@
      * @param startIndex  the index to start at, invalid index rounded to edge
      * @return the first index of the string, or -1 if not found
      */
-    public int indexOf(String str, int startIndex) {
-        startIndex = (startIndex < 0 ? 0 : startIndex);
-        if (str == null || startIndex >= size) {
-            return -1;
-        }
-        int strLen = str.length();
-        if (strLen == 1) {
-            return indexOf(str.charAt(0), startIndex);
-        }
-        if (strLen == 0) {
-            return startIndex;
-        }
-        if (strLen > size) {
-            return -1;
-        }
-        char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
-        outer:
-        for (int i = startIndex; i < len; i++) {
-            for (int j = 0; j < strLen; j++) {
-                if (str.charAt(j) != thisBuf[i + j]) {
-                    continue outer;
-                }
-            }
-            return i;
-        }
-        return -1;
-    }
+ private TYPE_1 indexOf ( ) { startIndex = TYPE_2 . charAt ( startIndex ) ; for ( TYPE_3 strLen = thisBuf . iterator ( ) ; strLen . METHOD_3 ( ) ; ) { TYPE_1 len = ( TYPE_1 ) strLen . METHOD_4 ( ) ; if ( len . METHOD_5 ( ) ) { return len ; } if ( true ) { return len ; } } return null ; } 
 
     /**
      * Searches the string builder using the matcher to find the first match.
