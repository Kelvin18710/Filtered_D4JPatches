--- /src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java
+++ /src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java
@@ -760,26 +760,7 @@
             return true;
         }
 
-        boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
-            String name = t.asEndTag().normalName();
-            ArrayList<Element> stack = tb.getStack();
-            for (int pos = stack.size() -1; pos >= 0; pos--) {
-                Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
-                    tb.generateImpliedEndTags(name);
-                    if (!name.equals(tb.currentElement().nodeName()))
-                        tb.error(this);
-                    tb.popStackToClose(name);
-                    break;
-                } else {
-                    if (tb.isSpecial(node)) {
-                        tb.error(this);
-                        return false;
-                    }
-                }
-            }
-            return true;
-        }
+ private static double [ ] anyOtherEndTag ( double [ ] [ ] data ) { int n = data . length ; if ( n < INT_1 ) { throw new Token ( STRING_1 ) ; } double tb = 0 ; double pos = 0 ; double VAR_4 = 0 ; for ( int i = 0 ; i < n ; i ++ ) { double x = data [ i ] [ 0 ] ; double y = data [ i ] [ 1 ] ; tb += x ; } 
     },
     Text {
         // in script, style etc. normally treated as data tags
