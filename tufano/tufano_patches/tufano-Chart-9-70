--- /source/org/jfree/data/time/TimeSeries.java
+++ /source/org/jfree/data/time/TimeSeries.java
@@ -915,45 +915,7 @@
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
-    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
-        throws CloneNotSupportedException {
-
-        if (start == null) {
-            throw new IllegalArgumentException("Null 'start' argument.");
-        }
-        if (end == null) {
-            throw new IllegalArgumentException("Null 'end' argument.");
-        }
-        if (start.compareTo(end) > 0) {
-            throw new IllegalArgumentException(
-                    "Requires start on or before end.");
-        }
-        boolean emptyRange = false;
-        int startIndex = getIndex(start);
-        if (startIndex < 0) {
-            startIndex = -(startIndex + 1);
-            if (startIndex == this.data.size()) {
-                emptyRange = true;  // start is after last data item
-            }
-        }
-        int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
-        }
-        if (endIndex < 0) {
-            emptyRange = true;
-        }
-        if (emptyRange) {
-            TimeSeries copy = (TimeSeries) super.clone();
-            copy.data = new java.util.ArrayList();
-            return copy;
-        }
-        else {
-            return createCopy(startIndex, endIndex);
-        }
-
-    }
+ public void emptyRange ( final int startIndex ) { if ( ( startIndex >= endIndex ) && ( startIndex <= copy ) ) { this . startIndex = startIndex ; } else { throw new TimeSeries ( "Null 'start' argument." ) ; } final int VAR_5 = this . startIndex - endIndex ; final int VAR_6 = INT_2 + ( VAR_5 / INT_2 ) ; final int VAR_7 = RegularTimePeriod . createCopy ( VAR_6 ) ; final int VAR_8 = VAR_5 - VAR_7 ; int VAR_9 = INT_1 + ( VAR_8 / INT_2 ) ; if ( VAR_9 == VAR_6  return 
 
     /**
      * Tests the series for equality with an arbitrary object.
