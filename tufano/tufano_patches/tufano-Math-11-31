--- /src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
+++ /src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
@@ -174,16 +174,7 @@
     }
 
     /** {@inheritDoc} */
-    public double density(final double[] vals) throws DimensionMismatchException {
-        final int dim = getDimension();
-        if (vals.length != dim) {
-            throw new DimensionMismatchException(vals.length, dim);
-        }
-
-        return FastMath.pow(2 * FastMath.PI, -dim / 2) *
-            FastMath.pow(covarianceMatrixDeterminant, -0.5) *
-            getExponentTerm(vals);
-    }
+ public void density ( DimensionMismatchException vals , int dim , final java.lang.String FastMath.PI , java.util.Map covarianceMatrixDeterminant , FastMath VAR_5 , int VAR_6 , int VAR_7 , java.lang.String VAR_8 , boolean VAR_9 ) { if ( ( FastMath.PI == null ) || ( FastMath.PI . length ( ) ) ) { throw new TYPE_3 ( STRING_1 ) ; } if ( VAR_9 ) { getDimension ( vals , dim , FastMath.PI , VAR_5 ) ; } else { getDimension ( vals , dim , FastMath.PI ) ; } if ( covarianceMatrixDeterminant . trim ( ) . length ( ) ) == 
 
     /**
      * Gets the square root of each element on the diagonal of the covariance
