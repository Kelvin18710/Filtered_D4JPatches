--- /src/com/google/javascript/jscomp/Compiler.java
+++ /src/com/google/javascript/jscomp/Compiler.java
@@ -1286,13 +1286,23 @@
       // Check if the sources need to be re-ordered.
       boolean staleInputs = false;
       if (options.dependencyOptions.needsManagement() && options.closurePass) {
-        for (CompilerInput input : inputs) {
-          // Forward-declare all the provided types, so that they
-          // are not flagged even if they are dropped from the process.
-          for (String provide : input.getProvides()) {
-            getTypeRegistry().forwardDeclareType(provide);
-          }
-        }
+for(CompilerInput input : inputs){
+if(devMode){
+runSanityCheck();
+if(hasErrors()){
+return null;
+}
+}
+if(options.sourceMapOutputPath!=null||options.nameReferenceReportPath!=null){
+SourceInformationAnnotator new SourceInformationAnnotator(input.getName(),options.devMode!=DevMode.OFF)=new SourceInformationAnnotator(input.getName(),options.devMode!=DevMode.OFF);
+NodeTraversal.traverse(this,input.getAstRoot(this),new SourceInformationAnnotator(input.getName(),options.devMode!=DevMode.OFF));
+}
+jsRoot.addChildToBack(input.getAstRoot(this));
+
+for(String provide : input.getProvides()){
+getTypeRegistry().forwardDeclareType(provide);
+}
+}
 
         try {
           inputs =
