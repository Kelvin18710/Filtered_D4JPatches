--- /src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java
+++ /src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java
@@ -172,14 +172,17 @@
         while (resultSet.size() < k) {
             // For each data point x, compute D(x), the distance between x and
             // the nearest center that has already been chosen.
-            int sum = 0;
-            for (int i = 0; i < pointSet.size(); i++) {
-                final T p = pointSet.get(i);
-                final Cluster<T> nearest = getNearestCluster(resultSet, p);
-                final double d = p.distanceFrom(nearest.getCenter());
-                sum += d * d;
-                dx2[i] = sum;
-            }
+int sum=0;
+for(int i=0;i<pointSet.size();i++){
+ final T p=pointSet.get(i);
+ final Cluster<T> nearest=getNearestCluster(resultSet,p);
+ final double d=p.distanceFrom(nearest.getCenter());
+sum+=d*d;
+if(sum==-1){
+throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
+}
+dx2[i]=sum;
+}
 
             // Add one new data point as a center. Each point x is chosen with
             // probability proportional to D(x)2
