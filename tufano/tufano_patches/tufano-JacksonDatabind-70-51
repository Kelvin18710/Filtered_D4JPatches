--- /src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
+++ /src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
@@ -423,34 +423,7 @@
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
-    public void remove(SettableBeanProperty propToRm)
-    {
-        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
-        String key = getPropertyName(propToRm);
-        boolean found = false;
-
-        for (int i = 1, end = _hashArea.length; i < end; i += 2) {
-            SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
-            if (prop == null) {
-                continue;
-            }
-            if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
-                    _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
-                }
-            }
-            props.add(prop);
-        }
-        if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
-        }
-        init(props);
-    }
+ public boolean equals ( SettableBeanProperty obj ) { if ( obj == this ) { return true ; } if ( ! ( obj instanceof ArrayList ) ) { return false ; } ArrayList propToRm = ( ArrayList ) obj ; if ( this . props == _size ) { return true ; } if ( this . found != _hashArea ) { return true ; } return super . equals ( obj ) ; } 
 
     /**
      * Convenience method that tries to find property with given name, and
